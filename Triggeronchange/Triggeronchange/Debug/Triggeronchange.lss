
Triggeronchange.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000174  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000004  00800100  00800100  000001e8  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000040  00000000  00000000  00000218  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000011f  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000b7  00000000  00000000  00000377  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000168  00000000  00000000  0000042e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000009c  00000000  00000000  00000598  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000016e  00000000  00000000  00000634  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000b9  00000000  00000000  000007a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000030  00000000  00000000  0000085b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	6d c0       	rjmp	.+218    	; 0xec <__vector_4>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	68 c0       	rjmp	.+208    	; 0x11a <__vector_18>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a4 30       	cpi	r26, 0x04	; 4
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	0e d0       	rcall	.+28     	; 0xc6 <main>
  aa:	62 c0       	rjmp	.+196    	; 0x170 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <timer0_init>:
	while(1) {
		count();
	}
}

void count() {
  ae:	85 b5       	in	r24, 0x25	; 37
  b0:	83 60       	ori	r24, 0x03	; 3
  b2:	85 bd       	out	0x25, r24	; 37
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	84 bd       	out	0x24, r24	; 36
  b8:	16 bc       	out	0x26, r1	; 38
  ba:	ee e6       	ldi	r30, 0x6E	; 110
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	81 60       	ori	r24, 0x01	; 1
  c2:	80 83       	st	Z, r24
  c4:	08 95       	ret

000000c6 <main>:
  c6:	8e ef       	ldi	r24, 0xFE	; 254
  c8:	81 b9       	out	0x01, r24	; 1
  ca:	e8 e6       	ldi	r30, 0x68	; 104
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	81 60       	ori	r24, 0x01	; 1
  d2:	80 83       	st	Z, r24
  d4:	eb e6       	ldi	r30, 0x6B	; 107
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	81 60       	ori	r24, 0x01	; 1
  dc:	80 83       	st	Z, r24
  de:	e7 df       	rcall	.-50     	; 0xae <timer0_init>
  e0:	10 92 01 01 	sts	0x0101, r1
  e4:	10 92 00 01 	sts	0x0100, r1
  e8:	78 94       	sei
  ea:	ff cf       	rjmp	.-2      	; 0xea <main+0x24>

000000ec <__vector_4>:
	// main program loop
}

//PULSE INTERRUPT
ISR(PCINT0_vect)
{
  ec:	1f 92       	push	r1
  ee:	0f 92       	push	r0
  f0:	0f b6       	in	r0, 0x3f	; 63
  f2:	0f 92       	push	r0
  f4:	11 24       	eor	r1, r1
  f6:	8f 93       	push	r24
  f8:	9f 93       	push	r25
	pulses++;
  fa:	80 91 00 01 	lds	r24, 0x0100
  fe:	90 91 01 01 	lds	r25, 0x0101
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	90 93 01 01 	sts	0x0101, r25
 108:	80 93 00 01 	sts	0x0100, r24
}
 10c:	9f 91       	pop	r25
 10e:	8f 91       	pop	r24
 110:	0f 90       	pop	r0
 112:	0f be       	out	0x3f, r0	; 63
 114:	0f 90       	pop	r0
 116:	1f 90       	pop	r1
 118:	18 95       	reti

0000011a <__vector_18>:

ISR(TIMER0_OVF_vect)
{
 11a:	1f 92       	push	r1
 11c:	0f 92       	push	r0
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	0f 92       	push	r0
 122:	11 24       	eor	r1, r1
 124:	2f 93       	push	r18
 126:	3f 93       	push	r19
 128:	4f 93       	push	r20
 12a:	8f 93       	push	r24
 12c:	9f 93       	push	r25
	rpm = pulses * 60 * 2; // pulses to minutes, 2
 12e:	20 91 00 01 	lds	r18, 0x0100
 132:	30 91 01 01 	lds	r19, 0x0101
 136:	48 e7       	ldi	r20, 0x78	; 120
 138:	42 9f       	mul	r20, r18
 13a:	c0 01       	movw	r24, r0
 13c:	43 9f       	mul	r20, r19
 13e:	90 0d       	add	r25, r0
 140:	11 24       	eor	r1, r1
 142:	90 93 03 01 	sts	0x0103, r25
 146:	80 93 02 01 	sts	0x0102, r24
	pulses = 0; //reset pulses
 14a:	10 92 01 01 	sts	0x0101, r1
 14e:	10 92 00 01 	sts	0x0100, r1
	//send rpm to main unit
	if (timer_led_is_on())
 152:	12 9b       	sbis	0x02, 2	; 2
 154:	02 c0       	rjmp	.+4      	; 0x15a <__vector_18+0x40>
	timer_led_off();
 156:	12 98       	cbi	0x02, 2	; 2
 158:	01 c0       	rjmp	.+2      	; 0x15c <__vector_18+0x42>
	else
	timer_led_on();
 15a:	12 9a       	sbi	0x02, 2	; 2
 15c:	9f 91       	pop	r25
 15e:	8f 91       	pop	r24
 160:	4f 91       	pop	r20
 162:	3f 91       	pop	r19
 164:	2f 91       	pop	r18
 166:	0f 90       	pop	r0
 168:	0f be       	out	0x3f, r0	; 63
 16a:	0f 90       	pop	r0
 16c:	1f 90       	pop	r1
 16e:	18 95       	reti

00000170 <_exit>:
 170:	f8 94       	cli

00000172 <__stop_program>:
 172:	ff cf       	rjmp	.-2      	; 0x172 <__stop_program>
